<Activity mc:Ignorable="sap sap2010" x:Class="ReportRecordStatus" this:ReportRecordStatus.IsProduction="False" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:rr="clr-namespace:Remora.Results;assembly=Remora.Results" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:tapm="clr-namespace:Tafs.Applications.PostVerificationPortal.Models;assembly=Tafs.Applications.PostVerificationPortal" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usa="clr-namespace:UiPath.Salesforce.Activities;assembly=UiPath.Salesforce.Activities" xmlns:usam="clr-namespace:UiPath.Salesforce.Activities.Models;assembly=UiPath.Salesforce.Activities" xmlns:usc="clr-namespace:UiPath.Salesforce.ConnectionService;assembly=UiPath.Salesforce" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="IsProduction" Type="InArgument(x:Boolean)" />
    <x:Property Name="Result" Type="OutArgument(rr:Result)" />
    <x:Property Name="QueueItem" Type="InArgument(tapm:QueueItem)" />
  </x:Members>
  <this:ReportRecordStatus.QueueItem>
    <InArgument x:TypeArguments="tapm:QueueItem">
      <CSharpValue x:TypeArguments="tapm:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">new Tafs.Applications.PostVerificationPortal.Models.QueueItem("abcd", "portal", "7337967", "MUBARAK 114 LLC", "1234", "CH Robinson", 3767.66m, "1292066", "9999", VerificationPortalStatus.Verified, null, null, null)</CSharpValue>
    </InArgument>
  </this:ReportRecordStatus.QueueItem>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1225.6,1066.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Remora.Results</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Salesforce.ConnectionService</x:String>
      <x:String>UiPath.Salesforce.Models</x:String>
      <x:String>UiPath.Salesforce.Telemetry</x:String>
      <x:String>UiPath.Salesforce.Activities</x:String>
      <x:String>UiPath.Salesforce.Enums</x:String>
      <x:String>UiPath.Salesforce.Activities.Models</x:String>
      <x:String>Tafs.Applications.Salesforce</x:String>
      <x:String>Tafs.Applications.PostVerificationPortal.Models</x:String>
      <x:String>Tafs.Applications.PostVerificationPortal</x:String>
      <x:String>Microsoft.CodeAnalysis</x:String>
      <x:String>System.Text.Json</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.HashCode</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.CodeAnalysis.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Remora.Results</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Text.Json</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Tafs.Applications.PostVerificationPortal</AssemblyReference>
      <AssemblyReference>Tafs.Applications.Salesforce</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Salesforce</AssemblyReference>
      <AssemblyReference>UiPath.Salesforce.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ReportRecordStatus" sap:VirtualizedContainerService.HintSize="707.2,1001.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="644.8,889.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="retryCount" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="582.4,81.6" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">
            <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">retryCount</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="582.4,656" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
        <ui:InterruptibleDoWhile.Body>
          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="548.8,519.2" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Sequence DisplayName="Do While Body" sap:VirtualizedContainerService.HintSize="512,288" sap2010:WorkflowViewState.IdRef="Sequence_3">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="salesforceUsername" />
                  <Variable x:TypeArguments="ss:SecureString" Name="salesforcePassword" />
                  <Variable x:TypeArguments="ss:SecureString" Name="tafsSalesforceToken" />
                  <Variable x:TypeArguments="x:String" Name="consumerKey" />
                  <Variable x:TypeArguments="ss:SecureString" Name="consumerSecret" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Get Credentials" sap:VirtualizedContainerService.HintSize="449.6,83.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="tafsSalesforceCredential" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="334,180" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1">
                    <ui:GetRobotCredential.Password>
                      <OutArgument x:TypeArguments="ss:SecureString">
                        <CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">salesforcePassword</CSharpReference>
                      </OutArgument>
                    </ui:GetRobotCredential.Password>
                    <ui:GetRobotCredential.Username>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">salesforceUsername</CSharpReference>
                      </OutArgument>
                    </ui:GetRobotCredential.Username>
                  </ui:GetRobotCredential>
                  <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="tafsSalesforceToken" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="334,180" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2">
                    <ui:GetRobotCredential.Password>
                      <OutArgument x:TypeArguments="ss:SecureString">
                        <CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">tafsSalesforceToken</CSharpReference>
                      </OutArgument>
                    </ui:GetRobotCredential.Password>
                  </ui:GetRobotCredential>
                  <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="tafsSalesforceApplicationCredential" CacheStrategy="None" DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="334,180" sap2010:WorkflowViewState.IdRef="GetRobotCredential_3">
                    <ui:GetRobotCredential.Password>
                      <OutArgument x:TypeArguments="ss:SecureString">
                        <CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">consumerSecret</CSharpReference>
                      </OutArgument>
                    </ui:GetRobotCredential.Password>
                    <ui:GetRobotCredential.Username>
                      <OutArgument x:TypeArguments="x:String">
                        <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">consumerKey</CSharpReference>
                      </OutArgument>
                    </ui:GetRobotCredential.Username>
                  </ui:GetRobotCredential>
                </Sequence>
                <usa:SalesforceApplicationScope CustomServer="{x:Null}" DesignSalesforceConnectionInfo="{x:Null}" ExistingConnectionService="{x:Null}" Port="{x:Null}" ProxyPassword="{x:Null}" ProxyServer="{x:Null}" ProxyUser="{x:Null}" SalesforceConnection="{x:Null}" Sforce_Auto_Assign="{x:Null}" DisplayName="Salesforce Application Scope" sap:VirtualizedContainerService.HintSize="449.6,52.8" sap2010:WorkflowViewState.IdRef="SalesforceApplicationScope_1" ReportApiErrorAsException="False" ServerType="Live" TelemetryEnabled="False" UseStrongDataTyping="False">
                  <usa:SalesforceApplicationScope.Body>
                    <ActivityAction x:TypeArguments="usc:IConnectionService">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="usc:IConnectionService" Name="SalesforceConnection" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="642.4,2563.2" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="updateRecordDictionary" />
                          <Variable x:TypeArguments="x:String" Name="updateRecordBody" />
                          <Variable x:TypeArguments="usam:SalesforceStatus" Name="apiStatus" />
                          <Variable x:TypeArguments="x:Int32" Name="apiStatusCode" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign sap:VirtualizedContainerService.HintSize="580,81.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                              <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">updateRecordDictionary</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">
                              <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39">new Dictionary&lt;string, string&gt;()</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="580,81.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">updateRecordDictionary["InvoiceActionId"]</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_40">QueueItem.SalesforceId</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="580,81.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">updateRecordDictionary["Status"]</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_41">QueueItem.BotStatus.Message</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <If sap:VirtualizedContainerService.HintSize="580,264.8" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">!string.IsNullOrWhiteSpace(QueueItem.Details)</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">updateRecordDictionary["Details"]</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">QueueItem.Details</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <If sap:VirtualizedContainerService.HintSize="580,264.8" sap2010:WorkflowViewState.IdRef="If_2">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">QueueItem.PaymentDate.HasValue</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">updateRecordDictionary["PaymentDate"]</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">QueueItem.PaymentDate.Value.ToString("MM/dd/yyyy")</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <If sap:VirtualizedContainerService.HintSize="580,264.8" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">!string.IsNullOrWhiteSpace(QueueItem.ClientAlias)</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">updateRecordDictionary["ClientName"]</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_44">QueueItem.ClientAlias</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign sap:VirtualizedContainerService.HintSize="580,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">updateRecordBody</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">System.Text.Json.JsonSerializer.Serialize(updateRecordDictionary, (JsonSerializerOptions)null)</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="580,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_37">updateRecordBody</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <ui:IfElseIf DisplayName="If production, send request. Otherwise, fake success." sap:VirtualizedContainerService.HintSize="580,868" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                          <ui:IfElseIf.ConditionBlocks>
                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                              <ui:IfElseIfBlock BlockType="If">
                                <ui:IfElseIfBlock.Condition>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">IsProduction</CSharpValue>
                                  </InArgument>
                                </ui:IfElseIfBlock.Condition>
                                <ui:IfElseIfBlock.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="529.6,523.2" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <usa:LightningRestApiRequest Result="{x:Null}" ResultPath="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" DisplayName="Lightning REST API Request" sap:VirtualizedContainerService.HintSize="467.2,24.8" sap2010:WorkflowViewState.IdRef="LightningRestApiRequest_1" Method="POST" Resource="/services/apexrest/updateVerificationStatus">
                                      <usa:LightningRestApiRequest.Body>
                                        <InArgument x:TypeArguments="x:String">
                                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">updateRecordBody</CSharpValue>
                                        </InArgument>
                                      </usa:LightningRestApiRequest.Body>
                                      <usa:LightningRestApiRequest.Headers>
                                        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                      </usa:LightningRestApiRequest.Headers>
                                      <usa:LightningRestApiRequest.SalesforceStatus>
                                        <OutArgument x:TypeArguments="usam:SalesforceStatus">
                                          <CSharpReference x:TypeArguments="usam:SalesforceStatus" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">apiStatus</CSharpReference>
                                        </OutArgument>
                                      </usa:LightningRestApiRequest.SalesforceStatus>
                                      <usa:LightningRestApiRequest.StatusCode>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">apiStatusCode</CSharpReference>
                                        </OutArgument>
                                      </usa:LightningRestApiRequest.StatusCode>
                                    </usa:LightningRestApiRequest>
                                    <If sap:VirtualizedContainerService.HintSize="467.2,346.4" sap2010:WorkflowViewState.IdRef="If_4">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">200 == apiStatusCode &amp;&amp; apiStatus.Success</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="rr:Result">
                                              <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_17">Result</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="rr:Result">
                                              <CSharpValue x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">Result.FromSuccess()</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="rr:Result">
                                              <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">Result</CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="rr:Result">
                                              <CSharpValue x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">new SalesforceError(apiStatus)</CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                              <ui:IfElseIfBlock BlockType="Else">
                                <ui:IfElseIfBlock.Then>
                                  <Assign sap2010:Annotation.AnnotationText="Dry Run (don't it API)" sap:VirtualizedContainerService.HintSize="433.6,112.8" sap2010:WorkflowViewState.IdRef="Assign_1">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="rr:Result">
                                        <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">Result</CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="rr:Result">
                                        <CSharpValue x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">Result.FromSuccess()</CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Assign>
                                </ui:IfElseIfBlock.Then>
                              </ui:IfElseIfBlock>
                            </sc:BindingList>
                          </ui:IfElseIf.ConditionBlocks>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:IfElseIf>
                      </Sequence>
                    </ActivityAction>
                  </usa:SalesforceApplicationScope.Body>
                  <usa:SalesforceApplicationScope.ConsumerKey>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">consumerKey</CSharpValue>
                    </InArgument>
                  </usa:SalesforceApplicationScope.ConsumerKey>
                  <usa:SalesforceApplicationScope.ConsumerSecret>
                    <InArgument x:TypeArguments="ss:SecureString">
                      <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">consumerSecret</CSharpValue>
                    </InArgument>
                  </usa:SalesforceApplicationScope.ConsumerSecret>
                  <usa:SalesforceApplicationScope.Password>
                    <InArgument x:TypeArguments="ss:SecureString">
                      <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">salesforcePassword</CSharpValue>
                    </InArgument>
                  </usa:SalesforceApplicationScope.Password>
                  <usa:SalesforceApplicationScope.SecurityToken>
                    <InArgument x:TypeArguments="ss:SecureString">
                      <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">tafsSalesforceToken</CSharpValue>
                    </InArgument>
                  </usa:SalesforceApplicationScope.SecurityToken>
                  <usa:SalesforceApplicationScope.Username>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_5">salesforceUsername</CSharpValue>
                    </InArgument>
                  </usa:SalesforceApplicationScope.Username>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </usa:SalesforceApplicationScope>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="515.2,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Bubble up exception" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="rr:Result">
                        <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">Result</CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="rr:Result">
                        <CSharpValue x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">exception</CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </ui:InterruptibleDoWhile.Body>
        <ui:InterruptibleDoWhile.Condition>
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">!Result.IsSuccess &amp;&amp; retryCount &lt; 3</CSharpValue>
        </ui:InterruptibleDoWhile.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InterruptibleDoWhile>
    </Sequence>
  </Sequence>
</Activity>