<Activity mc:Ignorable="sap sap2010" x:Class="Main" this:Main.IsProduction="False" this:Main.RunTQL="False" this:Main.RunTriumphPay="False" this:Main.RunLandstar="False" this:Main.RunCHRobinson="False" this:Main.ClientComparisonConfidence="80" this:Main.RunNolanTransportation="False" this:Main.NullDebtorPortalFallback="Unknown" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:rr="clr-namespace:Remora.Results;assembly=Remora.Results" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:sc1="clr-namespace:System.Collections;assembly=System.Private.CoreLib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sg="clr-namespace:System.Globalization;assembly=System.Private.CoreLib" xmlns:sl="clr-namespace:System.Linq;assembly=System.Linq" xmlns:tap="clr-namespace:Tafs.Applications.PostVerificationPortal;assembly=Tafs.Applications.PostVerificationPortal" xmlns:tapm="clr-namespace:Tafs.Applications.PostVerificationPortal.Models;assembly=Tafs.Applications.PostVerificationPortal" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="IsProduction" Type="InArgument(x:Boolean)" />
    <x:Property Name="RunTQL" Type="InArgument(x:Boolean)" />
    <x:Property Name="RunTriumphPay" Type="InArgument(x:Boolean)" />
    <x:Property Name="RunLandstar" Type="InArgument(x:Boolean)" />
    <x:Property Name="RunCHRobinson" Type="InArgument(x:Boolean)" />
    <x:Property Name="ClientComparisonConfidence" Type="InArgument(x:Int32)" />
    <x:Property Name="RunNolanTransportation" Type="InArgument(x:Boolean)" />
    <x:Property Name="NullDebtorPortalFallback" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>1613.6,892.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Remora.Results</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Tafs.Applications.PostVerificationPortal</x:String>
      <x:String>Tafs.Applications.PostVerificationPortal.Errors</x:String>
      <x:String>Tafs.Applications.PostVerificationPortal.Models</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>UiPath.Mail.Exchange</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.HashCode</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>Remora.Results</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Tafs.Applications.PostVerificationPortal</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>VerificationPortals.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Verification Portals" sap:VirtualizedContainerService.HintSize="696,748.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <StateMachine InitialState="{x:Reference __ReferenceID3}" DisplayName="Verification Portals" sap:VirtualizedContainerService.HintSize="633.6,660" sap2010:WorkflowViewState.IdRef="StateMachine_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
          <x:Double x:Key="StateContainerWidth">600</x:Double>
          <x:Double x:Key="StateContainerHeight">600</x:Double>
          <av:PointCollection x:Key="ConnectorLocation">300,77.7 299.8,77.7 299.8,97.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <State x:Name="__ReferenceID3" DisplayName="Initialize" sap:VirtualizedContainerService.HintSize="133.6,61.6" sap2010:WorkflowViewState.IdRef="State_1">
        <State.Entry>
          <Sequence sap:VirtualizedContainerService.HintSize="496,307.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="CurrentCulture = en-US" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="sg:CultureInfo">
                  <CSharpReference x:TypeArguments="sg:CultureInfo" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">System.Globalization.CultureInfo.CurrentCulture</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sg:CultureInfo">
                  <CSharpValue x:TypeArguments="sg:CultureInfo" sap2010:WorkflowViewState.IdRef="CSharpValue`1_72">System.Globalization.CultureInfo.CreateSpecificCulture("en-US")</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="CurrentUICulture = CurrentCulture" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="sg:CultureInfo">
                  <CSharpReference x:TypeArguments="sg:CultureInfo" sap2010:WorkflowViewState.IdRef="CSharpReference`1_46">System.Globalization.CultureInfo.CurrentUICulture</CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sg:CultureInfo">
                  <CSharpValue x:TypeArguments="sg:CultureInfo" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">System.Globalization.CultureInfo.CurrentCulture</CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </State.Entry>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">233,97.5</av:Point>
            <av:Size x:Key="ShapeSize">133.6,61.6</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <State.Transitions>
          <Transition DisplayName="" sap2010:WorkflowViewState.IdRef="Transition_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:PointCollection x:Key="ConnectorLocation">299.8,159.1 299.8,189.09999999999997 300.6,189.09999999999997 300.6,198.5</av:PointCollection>
                <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Transition.To>
              <State x:Name="__ReferenceID1" DisplayName="Build Queue" sap:VirtualizedContainerService.HintSize="135.2,61.6" sap2010:WorkflowViewState.IdRef="State_2">
                <State.Entry>
                  <Sequence sap:VirtualizedContainerService.HintSize="546.4,722.4" sap2010:WorkflowViewState.IdRef="Sequence_3">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Boolean" Name="shouldStop" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ShouldStop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="484,122.4" sap2010:WorkflowViewState.IdRef="ShouldStop_1">
                      <ui:ShouldStop.Result>
                        <OutArgument x:TypeArguments="x:Boolean">
                          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">shouldStop</CSharpReference>
                        </OutArgument>
                      </ui:ShouldStop.Result>
                    </ui:ShouldStop>
                    <ui:IfElseIf DisplayName="Else If Should Stop" sap:VirtualizedContainerService.HintSize="484,511.2" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                      <ui:IfElseIf.ConditionBlocks>
                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                          <ui:IfElseIfBlock BlockType="If" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_1">
                            <ui:IfElseIfBlock.Condition>
                              <InArgument x:TypeArguments="x:Boolean">
                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">shouldStop</CSharpValue>
                              </InArgument>
                            </ui:IfElseIfBlock.Condition>
                            <ui:IfElseIfBlock.Then>
                              <Assign DisplayName="Empty Collection. No work." sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="rr:Result(tapm:QueueItemCollection)">
                                    <CSharpReference x:TypeArguments="rr:Result(tapm:QueueItemCollection)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">buildQueueResult</CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="rr:Result(tapm:QueueItemCollection)">
                                    <CSharpValue x:TypeArguments="rr:Result(tapm:QueueItemCollection)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">Result&lt;QueueItemCollection&gt;.FromSuccess(new QueueItemCollection())</CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                          <ui:IfElseIfBlock BlockType="Else" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
                            <ui:IfElseIfBlock.Then>
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Build Salesforce Queue" sap:VirtualizedContainerService.HintSize="334.4,174.4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Utilities\\BuildSalesforceQueue.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="IsProduction">
                                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">IsProduction</CSharpValue>
                                  </InArgument>
                                  <OutArgument x:TypeArguments="rr:Result(tapm:QueueItemCollection)" x:Key="BuildSalesforceQueueResult">
                                    <CSharpReference x:TypeArguments="rr:Result(tapm:QueueItemCollection)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_61">buildQueueResult</CSharpReference>
                                  </OutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="NullDebtorPortalFallback">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">NullDebtorPortalFallback</CSharpValue>
                                  </InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </ui:IfElseIfBlock.Then>
                          </ui:IfElseIfBlock>
                        </sc:BindingList>
                      </ui:IfElseIf.ConditionBlocks>
                    </ui:IfElseIf>
                  </Sequence>
                </State.Entry>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <av:Point x:Key="ShapeLocation">233,198.5</av:Point>
                    <av:Size x:Key="ShapeSize">135.2,61.6</av:Size>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <State.Transitions>
                  <Transition sap2010:Annotation.AnnotationText="Continue condition ensures we actually have rows.&#xA;MapOr() checks for result success, and if yes, performs an Any() check on the array. If buildQueueResult is unsuccessful, it returns false." DisplayName="Continue" sap:VirtualizedContainerService.HintSize="450,564" sap2010:WorkflowViewState.IdRef="Transition_2">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">300.6,260.1 301.8,260.1 301.8,299.5</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.Condition>
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">buildQueueResult.MapOr(x =&gt; x.Any(), false)</CSharpValue>
                    </Transition.Condition>
                    <Transition.To>
                      <State x:Name="__ReferenceID2" DisplayName="Process Queue" sap:VirtualizedContainerService.HintSize="137.6,61.6" sap2010:WorkflowViewState.IdRef="State_3">
                        <State.Entry>
                          <Sequence sap:VirtualizedContainerService.HintSize="800,5368" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:Dictionary(x:String, x:Int32)" Name="countByPortal" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="737.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                              <Assign.To>
                                <OutArgument x:TypeArguments="tapm:QueueItemCollection">
                                  <CSharpReference x:TypeArguments="tapm:QueueItemCollection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">masterQueueItemCollection</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="tapm:QueueItemCollection">
                                  <CSharpValue x:TypeArguments="tapm:QueueItemCollection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">buildQueueResult.Entity</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Count By Portal" sap:VirtualizedContainerService.HintSize="737.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)">
                                  <CSharpReference x:TypeArguments="scg:Dictionary(x:String, x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_50">countByPortal</CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Int32)">
                                  <CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:Int32)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">masterQueueItemCollection.GetCountByPortal(true, true)</CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEach x:TypeArguments="sl:IGrouping(x:String, tapm:QueueItem)" CurrentIndex="{x:Null}" DisplayName="For Each portalGrouping" sap:VirtualizedContainerService.HintSize="737.6,5052" sap2010:WorkflowViewState.IdRef="ForEach`1_7">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="sl:IGrouping(x:String, tapm:QueueItem)">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sl:IGrouping(x:String, tapm:QueueItem)" Name="portalGrouping" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="704,4914.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Boolean" Name="shouldStop" />
                                      <Variable x:TypeArguments="x:Int32" Name="index" />
                                      <Variable x:TypeArguments="x:Int32" Name="uiErrors" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ShouldStop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="641.6,122.4" sap2010:WorkflowViewState.IdRef="ShouldStop_2">
                                      <ui:ShouldStop.Result>
                                        <OutArgument x:TypeArguments="x:Boolean">
                                          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">shouldStop</CSharpReference>
                                        </OutArgument>
                                      </ui:ShouldStop.Result>
                                    </ui:ShouldStop>
                                    <If DisplayName="If Should Stop" sap:VirtualizedContainerService.HintSize="641.6,468.8" sap2010:WorkflowViewState.IdRef="If_1">
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">shouldStop</CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,193.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Always" ContinueOnError="True" DisplayName="Close Browser" sap:VirtualizedContainerService.HintSize="353.6,56.8" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" InteractionMode="DebuggerApi" OpenMode="Never" ScopeGuid="d809fb6c-a97c-4710-91f8-da5a3b9ea09e" Version="V1">
                                            <uix:NApplicationCard.Body>
                                              <ActivityAction x:TypeArguments="x:Object">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                                                </ActivityAction.Argument>
                                              </ActivityAction>
                                            </uix:NApplicationCard.Body>
                                            <uix:NApplicationCard.TargetApp>
                                              <uix:TargetApp Area="1912, -8, 1936, 1056" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAAGgAAABoAaPmejwAAAInSURBVFhHxZfBVcMwDIY7QkdgBEZghI7QMydG6AiM0PdYgCNHRuA9FugIbBD+z7Vc2VZCWgI5fM+OJMuSpbjpZhiGm9i8nPbiS5zEQ2Qzh1A4BZuJdzEIAmAEZHfRmilCYQTOxTFvBs9iK5C/ZhkcxDbyEREKPTjLTi1bMr13urSZRk7mQ2CD7d77GSMUGnKyE9QYp4w7p7OgkJfNNH/KctYQ0GR/xEJlKHydD05HphaUB/u0mUZOhhKZjhKF/VE/nBf6OjMv9dSczjcdJ8BIln5NyVhz+qNKRFT9cZn0dW6zSfUWbJay0Zhs85xTO7r52KnVJXNGvfKcsQVVHDp9CaCR24ngL+obPWaZU5ZNNM7q6KyPAuCk2hO1U0slKbZlUgdgdYOSQUvWdwEY0lmfdL6LTZkERo6wi7MuOoHotrwpAN/FSS/8W4GsBIBOdG9Rnl8fgNP5Li49wShSiTS2NU+3Zdb9LgBDMn/LYUNgo7elW3ddAFPIhiP1txwQVFWeMWSzSADAZcMasqZXYJkAWiNDMitBajxsmvkyJeiM+ia0xvMBLN+EYt3X0LHaRQSrXMVksMqPEY222s9xG/H/fpBkQ9sAQ0hd7PRLfJJxlzwWG5t4ZEAG1UKn89l4olMzXXqLMm/is/izSYQMF/8s1zM+L5eUV0bImGza/vifPyYeOeT4fK2tMZH/3V+zFjmPbjlA1t2WPxEK56DN7I6gB6o6z2fYfAMYDF0ZCKqA1wAAAABJRU5ErkJggg==" InformativeScreenshot="e28dd74ef1511bb0cc9635db39a6a52a.png" Selector="&lt;html app='chrome.exe' /&gt;" />
                                            </uix:NApplicationCard.TargetApp>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </uix:NApplicationCard>
                                          <ui:Break sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,104.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ui:IfElseIf DisplayName="Conditionally Skip Portals" sap:VirtualizedContainerService.HintSize="641.6,1004.8" sap2010:WorkflowViewState.IdRef="IfElseIf_2">
                                      <ui:IfElseIf.ConditionBlocks>
                                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                          <ui:IfElseIfBlock BlockType="If" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_3">
                                            <ui:IfElseIfBlock.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">portalGrouping.Key == "TQL" &amp;&amp; !RunTQL</CSharpValue>
                                              </InArgument>
                                            </ui:IfElseIfBlock.Condition>
                                            <ui:IfElseIfBlock.Then>
                                              <ui:Continue sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Continue_1" />
                                            </ui:IfElseIfBlock.Then>
                                          </ui:IfElseIfBlock>
                                          <ui:IfElseIfBlock BlockType="ElseIf" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_4">
                                            <ui:IfElseIfBlock.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_83">portalGrouping.Key == "TriumphPay" &amp;&amp; !RunTriumphPay</CSharpValue>
                                              </InArgument>
                                            </ui:IfElseIfBlock.Condition>
                                            <ui:IfElseIfBlock.Then>
                                              <ui:Continue sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                            </ui:IfElseIfBlock.Then>
                                          </ui:IfElseIfBlock>
                                          <ui:IfElseIfBlock BlockType="ElseIf" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_5">
                                            <ui:IfElseIfBlock.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">portalGrouping.Key == "Landstar" &amp;&amp; !RunLandstar</CSharpValue>
                                              </InArgument>
                                            </ui:IfElseIfBlock.Condition>
                                            <ui:IfElseIfBlock.Then>
                                              <ui:Continue sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Continue_3" />
                                            </ui:IfElseIfBlock.Then>
                                          </ui:IfElseIfBlock>
                                          <ui:IfElseIfBlock BlockType="ElseIf" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_6">
                                            <ui:IfElseIfBlock.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">portalGrouping.Key == "CH Robinson" &amp;&amp; !RunCHRobinson</CSharpValue>
                                              </InArgument>
                                            </ui:IfElseIfBlock.Condition>
                                            <ui:IfElseIfBlock.Then>
                                              <ui:Continue sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Continue_4" />
                                            </ui:IfElseIfBlock.Then>
                                          </ui:IfElseIfBlock>
                                          <ui:IfElseIfBlock BlockType="ElseIf" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_7">
                                            <ui:IfElseIfBlock.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">portalGrouping.Key == "Nolan Transportation" &amp;&amp; !RunNolanTransportation</CSharpValue>
                                              </InArgument>
                                            </ui:IfElseIfBlock.Condition>
                                            <ui:IfElseIfBlock.Then>
                                              <ui:Continue sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Continue_8" />
                                            </ui:IfElseIfBlock.Then>
                                          </ui:IfElseIfBlock>
                                          <ui:IfElseIfBlock BlockType="ElseIf" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_8">
                                            <ui:IfElseIfBlock.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">portalGrouping.Key == "Unknown"</CSharpValue>
                                              </InArgument>
                                            </ui:IfElseIfBlock.Condition>
                                            <ui:IfElseIfBlock.Then>
                                              <ui:Continue sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Continue_9" />
                                            </ui:IfElseIfBlock.Then>
                                          </ui:IfElseIfBlock>
                                        </sc:BindingList>
                                      </ui:IfElseIf.ConditionBlocks>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:IfElseIf>
                                    <Assign sap:VirtualizedContainerService.HintSize="641.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_53">uiErrors</CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ForEach x:TypeArguments="tapm:QueueItem" DisplayName="For Each Queue Item" sap:VirtualizedContainerService.HintSize="641.6,2860" sap2010:WorkflowViewState.IdRef="ForEach`1_4">
                                      <ui:ForEach.Body>
                                        <ActivityAction x:TypeArguments="tapm:QueueItem">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="tapm:QueueItem" Name="queueItem" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="608,2713.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="ui:QueueItem" Name="transactionItem" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:ShouldStop DisplayName="Should Stop" sap:VirtualizedContainerService.HintSize="545.6,122.4" sap2010:WorkflowViewState.IdRef="ShouldStop_3">
                                              <ui:ShouldStop.Result>
                                                <OutArgument x:TypeArguments="x:Boolean">
                                                  <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">shouldStop</CSharpReference>
                                                </OutArgument>
                                              </ui:ShouldStop.Result>
                                            </ui:ShouldStop>
                                            <If DisplayName="If Should Stop" sap:VirtualizedContainerService.HintSize="545.6,242.4" sap2010:WorkflowViewState.IdRef="If_2">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">shouldStop</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <ui:Break sap:VirtualizedContainerService.HintSize="334.4,24.8" sap2010:WorkflowViewState.IdRef="Break_2" />
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="545.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace">
                                              <ui:LogMessage.Message>
                                                <InArgument x:TypeArguments="x:Object">
                                                  <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">Newtonsoft.Json.JsonConvert.SerializeObject(queueItem, Newtonsoft.Json.Formatting.Indented)</CSharpValue>
                                                </InArgument>
                                              </ui:LogMessage.Message>
                                            </ui:LogMessage>
                                            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="545.6,740.8" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <TryCatch.Try>
                                                <Switch x:TypeArguments="x:String" DisplayName="Switch" sap:VirtualizedContainerService.HintSize="496.8,477.6" sap2010:WorkflowViewState.IdRef="Switch`1_2">
                                                  <Switch.Default>
                                                    <Assign DisplayName="Unknown Debtor" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_17">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="rr:Result">
                                                          <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_63">processQueueItemResult</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="rr:Result">
                                                          <CSharpValue x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">Result.FromError(new VerificationPortalError(VerificationPortalStatus.BusinessException, "Unknown debtor."))</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Switch.Default>
                                                  <Switch.Expression>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">queueItem.Portal</CSharpValue>
                                                    </InArgument>
                                                  </Switch.Expression>
                                                  <Sequence x:Key="TestDebtor" sap:VirtualizedContainerService.HintSize="496,307.2" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="tap:VerificationPortalStatus">
                                                          <CSharpReference x:TypeArguments="tap:VerificationPortalStatus" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">queueItem.BotStatus</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="tap:VerificationPortalStatus">
                                                          <CSharpValue x:TypeArguments="tap:VerificationPortalStatus" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">VerificationPortalStatus.Verified</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                    <Assign DisplayName="Default Success" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_6">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="rr:Result">
                                                          <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">processQueueItemResult</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="rr:Result">
                                                          <CSharpValue x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">Result.FromSuccess()</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </Sequence>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="TriumphPay" DisplayName="Triumph Pay" sap:VirtualizedContainerService.HintSize="334.4,174.4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="VendorWorkflows\\TriumphPay.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="tapm:QueueItem" x:Key="QueueItem">
                                                        <CSharpValue x:TypeArguments="tapm:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">queueItem</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="Iteration">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">index + 1</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="TotalQueueItems">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">countByPortal[queueItem.Portal]</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="ClientComparisonConfidence">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">ClientComparisonConfidence</CSharpValue>
                                                      </InArgument>
                                                      <OutArgument x:TypeArguments="rr:Result" x:Key="Result">
                                                        <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_55">processQueueItemResult</CSharpReference>
                                                      </OutArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="TQL" DisplayName="TQL" sap:VirtualizedContainerService.HintSize="334.4,174.4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="VendorWorkflows\\TQL.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="tapm:QueueItem" x:Key="QueueItem">
                                                        <CSharpValue x:TypeArguments="tapm:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">queueItem</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="Iteration">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">index + 1</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="TotalQueueItems">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">countByPortal[queueItem.Portal]</CSharpValue>
                                                      </InArgument>
                                                      <OutArgument x:TypeArguments="rr:Result" x:Key="Result">
                                                        <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_56">processQueueItemResult</CSharpReference>
                                                      </OutArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="ClientComparisonConfidence">80</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="Landstar" DisplayName="Landstar" sap:VirtualizedContainerService.HintSize="334.4,174.4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="VendorWorkflows\\Landstar.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InOutArgument x:TypeArguments="tapm:QueueItem" x:Key="QueueItem">
                                                        <CSharpReference x:TypeArguments="tapm:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpReference`1_48">queueItem</CSharpReference>
                                                      </InOutArgument>
                                                      <OutArgument x:TypeArguments="rr:Result" x:Key="Result">
                                                        <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_47">processQueueItemResult</CSharpReference>
                                                      </OutArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="Iteration">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">index + 1</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="TotalQueueItems">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">countByPortal[queueItem.Portal]</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="ClientComparisonConfidence">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">ClientComparisonConfidence</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="SuggestAlias">False</InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <Sequence x:Key="CH Robinson" sap:VirtualizedContainerService.HintSize="416,461.6" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                    <Sequence.Variables>
                                                      <Variable x:TypeArguments="x:Boolean" Name="suggestTCodeAlias" />
                                                    </Sequence.Variables>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="PostVerificationPortal_CHRobinson_SuggestTCodeAsAlias" CacheStrategy="Execution" DisplayName="Get Asset" sap:VirtualizedContainerService.HintSize="353.6,175.2" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                                                      <ui:GetRobotAsset.Value>
                                                        <OutArgument x:TypeArguments="x:Boolean">
                                                          <CSharpReference x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpReference`1_72">suggestTCodeAlias</CSharpReference>
                                                        </OutArgument>
                                                      </ui:GetRobotAsset.Value>
                                                    </ui:GetRobotAsset>
                                                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="CH Robinson" sap:VirtualizedContainerService.HintSize="353.6,197.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="VendorWorkflows\\CHRobinson.xaml">
                                                      <ui:InvokeWorkflowFile.Arguments>
                                                        <InOutArgument x:TypeArguments="tapm:QueueItem" x:Key="QueueItem">
                                                          <CSharpReference x:TypeArguments="tapm:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">queueItem</CSharpReference>
                                                        </InOutArgument>
                                                        <OutArgument x:TypeArguments="rr:Result" x:Key="Result">
                                                          <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">processQueueItemResult</CSharpReference>
                                                        </OutArgument>
                                                        <InArgument x:TypeArguments="x:Int32" x:Key="Iteration">
                                                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">index + 1</CSharpValue>
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:Int32" x:Key="TotalQueueItems">
                                                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">countByPortal[queueItem.Portal]</CSharpValue>
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:Int32" x:Key="ClientComparisonConfidence">
                                                          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">ClientComparisonConfidence</CSharpValue>
                                                        </InArgument>
                                                        <InArgument x:TypeArguments="x:Boolean" x:Key="SuggestTCodeAsAlias">
                                                          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">suggestTCodeAlias</CSharpValue>
                                                        </InArgument>
                                                      </ui:InvokeWorkflowFile.Arguments>
                                                    </ui:InvokeWorkflowFile>
                                                  </Sequence>
                                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" x:Key="Nolan Transportation" DisplayName="Nolan Transportation" sap:VirtualizedContainerService.HintSize="334.4,174.4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="VendorWorkflows\\NolanTransportation.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InOutArgument x:TypeArguments="tapm:QueueItem" x:Key="QueueItem">
                                                        <CSharpReference x:TypeArguments="tapm:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpReference`1_71">queueItem</CSharpReference>
                                                      </InOutArgument>
                                                      <OutArgument x:TypeArguments="rr:Result" x:Key="Result">
                                                        <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_70">processQueueItemResult</CSharpReference>
                                                      </OutArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="Iteration">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">index + 1</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="TotalQueueItems">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">countByPortal[queueItem.Portal]</CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:Int32" x:Key="ClientComparisonConfidence">80</InArgument>
                                                      <InArgument x:TypeArguments="x:Boolean" x:Key="SuggestAlias">False</InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Switch>
                                              </TryCatch.Try>
                                              <TryCatch.Catches>
                                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="500,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ActivityAction x:TypeArguments="s:Exception">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                                    </ActivityAction.Argument>
                                                    <Assign DisplayName="Bubble up error" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_22">
                                                      <Assign.To>
                                                        <OutArgument x:TypeArguments="rr:Result">
                                                          <CSharpReference x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpReference`1_68">processQueueItemResult</CSharpReference>
                                                        </OutArgument>
                                                      </Assign.To>
                                                      <Assign.Value>
                                                        <InArgument x:TypeArguments="rr:Result">
                                                          <CSharpValue x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">exception</CSharpValue>
                                                        </InArgument>
                                                      </Assign.Value>
                                                    </Assign>
                                                  </ActivityAction>
                                                </Catch>
                                              </TryCatch.Catches>
                                            </TryCatch>
                                            <If sap2010:Annotation.AnnotationText="If we encounter a selector error, then we'll want to close out of the browser and re-open it when we get to the next load. This prevents us from having all of them fail because it's logged out or similar." DisplayName="If UI Error" sap:VirtualizedContainerService.HintSize="545.6,1147.2" sap2010:WorkflowViewState.IdRef="If_3">
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">!processQueueItemResult.IsSuccess &amp;&amp; (processQueueItemResult.Error.Message.Contains("Could not find the user-interface (UI) element") || processQueueItemResult.Error.Message.Contains("The UI element is invalid.") || processQueueItemResult.Error.Message.Contains("The target element is disabled."))</CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <If.Then>
                                                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="512,812" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Always" ContinueOnError="True" DisplayName="Close Browser" sap:VirtualizedContainerService.HintSize="449.6,264.8" sap2010:WorkflowViewState.IdRef="NApplicationCard_5" InteractionMode="DebuggerApi" OpenMode="Never" ScopeGuid="d809fb6c-a97c-4710-91f8-da5a3b9ea09e" Version="V1">
                                                    <uix:NApplicationCard.Body>
                                                      <ActivityAction x:TypeArguments="x:Object">
                                                        <ActivityAction.Argument>
                                                          <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                                                        </ActivityAction.Argument>
                                                      </ActivityAction>
                                                    </uix:NApplicationCard.Body>
                                                    <uix:NApplicationCard.TargetApp>
                                                      <uix:TargetApp Area="1912, -8, 1936, 1056" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAAGgAAABoAaPmejwAAAInSURBVFhHxZfBVcMwDIY7QkdgBEZghI7QMydG6AiM0PdYgCNHRuA9FugIbBD+z7Vc2VZCWgI5fM+OJMuSpbjpZhiGm9i8nPbiS5zEQ2Qzh1A4BZuJdzEIAmAEZHfRmilCYQTOxTFvBs9iK5C/ZhkcxDbyEREKPTjLTi1bMr13urSZRk7mQ2CD7d77GSMUGnKyE9QYp4w7p7OgkJfNNH/KctYQ0GR/xEJlKHydD05HphaUB/u0mUZOhhKZjhKF/VE/nBf6OjMv9dSczjcdJ8BIln5NyVhz+qNKRFT9cZn0dW6zSfUWbJay0Zhs85xTO7r52KnVJXNGvfKcsQVVHDp9CaCR24ngL+obPWaZU5ZNNM7q6KyPAuCk2hO1U0slKbZlUgdgdYOSQUvWdwEY0lmfdL6LTZkERo6wi7MuOoHotrwpAN/FSS/8W4GsBIBOdG9Rnl8fgNP5Li49wShSiTS2NU+3Zdb9LgBDMn/LYUNgo7elW3ddAFPIhiP1txwQVFWeMWSzSADAZcMasqZXYJkAWiNDMitBajxsmvkyJeiM+ia0xvMBLN+EYt3X0LHaRQSrXMVksMqPEY222s9xG/H/fpBkQ9sAQ0hd7PRLfJJxlzwWG5t4ZEAG1UKn89l4olMzXXqLMm/is/izSYQMF/8s1zM+L5eUV0bImGza/vifPyYeOeT4fK2tMZH/3V+zFjmPbjlA1t2WPxEK56DN7I6gB6o6z2fYfAMYDF0ZCKqA1wAAAABJRU5ErkJggg==" InformativeScreenshot="e28dd74ef1511bb0cc9635db39a6a52a.png" Selector="&lt;html app='chrome.exe' /&gt;" />
                                                    </uix:NApplicationCard.TargetApp>
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                  </uix:NApplicationCard>
                                                  <Assign sap:VirtualizedContainerService.HintSize="449.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_54">uiErrors</CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">
                                                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">uiErrors + 1</CSharpValue>
                                                      </InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <If DisplayName="Too many UI errors in a row" sap:VirtualizedContainerService.HintSize="449.6,344.8" sap2010:WorkflowViewState.IdRef="If_6">
                                                    <If.Condition>
                                                      <InArgument x:TypeArguments="x:Boolean">
                                                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">uiErrors &gt; 3</CSharpValue>
                                                      </InArgument>
                                                    </If.Condition>
                                                    <If.Then>
                                                      <ui:Break sap2010:Annotation.AnnotationText="" sap:VirtualizedContainerService.HintSize="334.4,56" sap2010:WorkflowViewState.IdRef="Break_3">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:Break>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,104.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,104.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Queue Item Post Process" sap:VirtualizedContainerService.HintSize="545.6,197.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Utilities\\QueueItemPostProcess.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:Boolean" x:Key="IsProduction">
                                                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">IsProduction</CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="tapm:QueueItem" x:Key="QueueItem">
                                                  <CSharpValue x:TypeArguments="tapm:QueueItem" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">queueItem</CSharpValue>
                                                </InArgument>
                                                <InOutArgument x:TypeArguments="tapm:QueueItemCollection" x:Key="QueueItemCollection">
                                                  <CSharpReference x:TypeArguments="tapm:QueueItemCollection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">masterQueueItemCollection</CSharpReference>
                                                </InOutArgument>
                                                <InArgument x:TypeArguments="rr:Result" x:Key="QueueItemResult">
                                                  <CSharpValue x:TypeArguments="rr:Result" sap2010:WorkflowViewState.IdRef="CSharpValue`1_86">processQueueItemResult</CSharpValue>
                                                </InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEach.Body>
                                      <ui:ForEach.CurrentIndex>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_49">index</CSharpReference>
                                        </OutArgument>
                                      </ui:ForEach.CurrentIndex>
                                      <ui:ForEach.Values>
                                        <InArgument x:TypeArguments="sc1:IEnumerable">
                                          <CSharpValue x:TypeArguments="sc1:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">portalGrouping</CSharpValue>
                                        </InArgument>
                                      </ui:ForEach.Values>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ForEach>
                                    <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Always" ContinueOnError="True" DisplayName="Close Browser" sap:VirtualizedContainerService.HintSize="641.6,256" sap2010:WorkflowViewState.IdRef="NApplicationCard_4" InteractionMode="DebuggerApi" OpenMode="Never" ScopeGuid="d809fb6c-a97c-4710-91f8-da5a3b9ea09e" Version="V1">
                                      <uix:NApplicationCard.Body>
                                        <ActivityAction x:TypeArguments="x:Object">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                                          </ActivityAction.Argument>
                                        </ActivityAction>
                                      </uix:NApplicationCard.Body>
                                      <uix:NApplicationCard.TargetApp>
                                        <uix:TargetApp Area="1912, -8, 1936, 1056" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAAGgAAABoAaPmejwAAAInSURBVFhHxZfBVcMwDIY7QkdgBEZghI7QMydG6AiM0PdYgCNHRuA9FugIbBD+z7Vc2VZCWgI5fM+OJMuSpbjpZhiGm9i8nPbiS5zEQ2Qzh1A4BZuJdzEIAmAEZHfRmilCYQTOxTFvBs9iK5C/ZhkcxDbyEREKPTjLTi1bMr13urSZRk7mQ2CD7d77GSMUGnKyE9QYp4w7p7OgkJfNNH/KctYQ0GR/xEJlKHydD05HphaUB/u0mUZOhhKZjhKF/VE/nBf6OjMv9dSczjcdJ8BIln5NyVhz+qNKRFT9cZn0dW6zSfUWbJay0Zhs85xTO7r52KnVJXNGvfKcsQVVHDp9CaCR24ngL+obPWaZU5ZNNM7q6KyPAuCk2hO1U0slKbZlUgdgdYOSQUvWdwEY0lmfdL6LTZkERo6wi7MuOoHotrwpAN/FSS/8W4GsBIBOdG9Rnl8fgNP5Li49wShSiTS2NU+3Zdb9LgBDMn/LYUNgo7elW3ddAFPIhiP1txwQVFWeMWSzSADAZcMasqZXYJkAWiNDMitBajxsmvkyJeiM+ia0xvMBLN+EYt3X0LHaRQSrXMVksMqPEY222s9xG/H/fpBkQ9sAQ0hd7PRLfJJxlzwWG5t4ZEAG1UKn89l4olMzXXqLMm/is/izSYQMF/8s1zM+L5eUV0bImGza/vifPyYeOeT4fK2tMZH/3V+zFjmPbjlA1t2WPxEK56DN7I6gB6o6z2fYfAMYDF0ZCKqA1wAAAABJRU5ErkJggg==" InformativeScreenshot="e28dd74ef1511bb0cc9635db39a6a52a.png" Selector="&lt;html app='chrome.exe' /&gt;" />
                                      </uix:NApplicationCard.TargetApp>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </uix:NApplicationCard>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                              <ui:ForEach.Values>
                                <InArgument x:TypeArguments="sc1:IEnumerable">
                                  <CSharpValue x:TypeArguments="sc1:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">masterQueueItemCollection.GetByPortal()</CSharpValue>
                                </InArgument>
                              </ui:ForEach.Values>
                            </ui:ForEach>
                          </Sequence>
                        </State.Entry>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">233,299.5</av:Point>
                            <av:Size x:Key="ShapeSize">137.6,61.6</av:Size>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <State.Transitions>
                          <Transition DisplayName="Stop" sap2010:WorkflowViewState.IdRef="Transition_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:PointCollection x:Key="ConnectorLocation">301.8,361.1 301.8,356.0400000000001 299.8,356.0400000000001 299.8,400.5</av:PointCollection>
                                <x:Int32 x:Key="SrcConnectionPointIndex">39</x:Int32>
                                <x:Int32 x:Key="DestConnectionPointIndex">38</x:Int32>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Transition.To>
                              <State x:Name="__ReferenceID0" DisplayName="Finalize" sap:VirtualizedContainerService.HintSize="379.2,288" sap2010:WorkflowViewState.IdRef="State_4" IsFinal="True">
                                <State.Entry>
                                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Send E-Mail" sap:VirtualizedContainerService.HintSize="334.4,174.4" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Utilities\\SendEmail.xaml">
                                    <ui:InvokeWorkflowFile.Arguments>
                                      <InArgument x:TypeArguments="tapm:QueueItemCollection" x:Key="MasterQueueItemCollection">
                                        <CSharpValue x:TypeArguments="tapm:QueueItemCollection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">masterQueueItemCollection</CSharpValue>
                                      </InArgument>
                                      <InArgument x:TypeArguments="x:Boolean" x:Key="IsTest">False</InArgument>
                                    </ui:InvokeWorkflowFile.Arguments>
                                  </ui:InvokeWorkflowFile>
                                </State.Entry>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">233,400.5</av:Point>
                                    <av:Size x:Key="ShapeSize">133.6,61.6</av:Size>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </State>
                            </Transition.To>
                          </Transition>
                        </State.Transitions>
                      </State>
                    </Transition.To>
                  </Transition>
                  <Transition sap2010:Annotation.AnnotationText="If buildQueueResult is successful and the array is empty, return true.&#xA;If buildQueueResult is unsuccessful, return false." DisplayName="Stop" sap:VirtualizedContainerService.HintSize="599,786" sap2010:WorkflowViewState.IdRef="Transition_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">233,226.22 207.19999999999993,226.22 207.19999999999993,446.7 233,446.7</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">33</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">57</x:Int32>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.To>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </Transition.To>
                    <Transition.Action>
                      <Sequence sap:VirtualizedContainerService.HintSize="496,366" sap2010:WorkflowViewState.IdRef="Sequence_34">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,173" sap2010:WorkflowViewState.IdRef="LogMessage_2">
                          <ui:LogMessage.Message>
                            <InArgument x:TypeArguments="x:Object">
                              <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">"Nothing to do!"</CSharpValue>
                            </InArgument>
                          </ui:LogMessage.Message>
                        </ui:LogMessage>
                        <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_23">
                          <Assign.To>
                            <OutArgument x:TypeArguments="tapm:QueueItemCollection">
                              <CSharpReference x:TypeArguments="tapm:QueueItemCollection" sap2010:WorkflowViewState.IdRef="CSharpReference`1_69">masterQueueItemCollection</CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="tapm:QueueItemCollection">
                              <CSharpValue x:TypeArguments="tapm:QueueItemCollection" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">buildQueueResult.Entity</CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </Transition.Action>
                    <Transition.Condition>
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">buildQueueResult.MapOr(x =&gt; !x.Any(), false)</CSharpValue>
                    </Transition.Condition>
                  </Transition>
                  <Transition DisplayName="Error" sap:VirtualizedContainerService.HintSize="450,519" sap2010:WorkflowViewState.IdRef="Transition_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:PointCollection x:Key="ConnectorLocation">368.2,241.62 395.19999999999993,241.62 395.19999999999993,434.38 366.6,434.38</av:PointCollection>
                        <x:Int32 x:Key="SrcConnectionPointIndex">52</x:Int32>
                        <x:Int32 x:Key="DestConnectionPointIndex">40</x:Int32>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Transition.To>
                      <x:Reference>__ReferenceID0</x:Reference>
                    </Transition.To>
                    <Transition.Action>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Fatal">
                        <ui:LogMessage.Message>
                          <InArgument x:TypeArguments="x:Object">
                            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">"Failed to get queue items: " + buildQueueResult.Error.Message</CSharpValue>
                          </InArgument>
                        </ui:LogMessage.Message>
                      </ui:LogMessage>
                    </Transition.Action>
                    <Transition.Condition>
                      <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">!buildQueueResult.IsSuccess</CSharpValue>
                    </Transition.Condition>
                  </Transition>
                </State.Transitions>
              </State>
            </Transition.To>
          </Transition>
        </State.Transitions>
      </State>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="rr:Result(tapm:QueueItemCollection)" Name="buildQueueResult" />
        <Variable x:TypeArguments="rr:Result" Name="processQueueItemResult" />
        <Variable x:TypeArguments="tapm:QueueItemCollection" Name="masterQueueItemCollection" />
      </StateMachine.Variables>
    </StateMachine>
  </Sequence>
</Activity>